rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for 'users' collection:
    match /users/{userId} {
    	// All users may search username.
    	allow read: if true;
      // Only authenticated users can read all user documents.
      // allow read: if request.auth != null;

      // Only authenticated users can write their own document.
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for 'poules' collection:
    match /poules/{pouleId} {
      allow read: if (
        request.auth != null && (
          resource.data.createdBy == request.auth.uid ||
          resource.data.isPublic == true ||
          (resource.data.invited != null && request.auth.uid in resource.data.invited) ||
          (resource.data.members != null && request.auth.uid in resource.data.members)
        )
      ) || resource.data.inviteCode != null;

      // Only authenticated users can create a poule.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;

      // Authenticated users can join (add themselves to `members`).
      allow update: if request.auth != null
                    && !(request.auth.uid in resource.data.members)
                    && request.resource.data.members.size() == resource.data.members.size() + 1
                    && (
                         (resource.data.isPublic == true)
                         || (resource.data.invited != null && request.auth.uid in resource.data.invited)
                       );

      // Authenticated users can leave (remove themselves from `members`).
      allow update: if request.auth != null
                    && (request.auth.uid in resource.data.members)
                    && request.resource.data.members.size() == resource.data.members.size() - 1
                    && !(request.auth.uid in request.resource.data.members);

      // Only the creator can update everything.
      allow update: if request.auth != null
                    && request.auth.uid == resource.data.createdBy;

      // Only the creator can delete the poule or members.
      allow delete: if request.auth != null
                    && request.auth.uid == resource.data.createdBy;
    }
  }
}